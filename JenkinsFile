pipeline {
  agent {
    kubernetes {
      yamlFile 'agent_kubernetes.yaml'   
    }
  }
  options {
    buildDiscarder(logRotator(numToKeepStr: '3'))
    durabilityHint('PERFORMANCE_OPTIMIZED')
    disableConcurrentBuilds()
  }
  environment {
    DH_CREDS=credentials('dh-creds')
    LATEST_TAG='latest'
  }
  stages {
    stage('Build with Buildah') {
      steps {
        container('buildah') {
          sh 'buildah build -t focus617xu/jenkins-buildah-example:1.0 .'
        }
      }
    }
    stage('Login to Docker Hub') {
      steps {
        container('buildah') {
          sh 'echo $DH_CREDS_PSW | buildah login -u $DH_CREDS_USR --password-stdin docker.io'
        }
      }
    }
    stage('Tag image and Push image into Dockerhub') {
      script {
        def BUILD_TAG= new Date().format("yyyyMMddHHmmss");

        steps {
          container('buildah') {
            sh 'buildah tag focus617xu/jenkins-buildah-example:1.0 focus617xu/jenkins-buildah-example:${BUILD_TAG}'
          }
        }
        steps {
          container('buildah') {
            sh 'buildah push focus617xu/jenkins-buildah-example:${BUILD_TAG}'
          }
        }
      }
    }
    stage('Deploy App to Kubernetes') {     
      steps {
        container('kubectl') {
          withCredentials([file(credentialsId: 'mykubeconfig', variable: 'KUBECONFIG')]) {
            sh 'sed -i "s/<TAG>/${LATEST_TAG}/" myapp.yaml'
            sh 'kubectl apply -f myapp.yaml'
          }
        }
      }
    }
  }
  post {
    always {
      container('buildah') {
        sh 'buildah logout docker.io'
      }
    }
  }
}
